/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0;
}

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block;
}

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px;
}

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
     * Add the correct display in IE.
     */
main {
  display: block;
}

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit;
}

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder;
}

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic;
}

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000;
}

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%;
}

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block;
}

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none;
}

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible;
}

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible;
}

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */
}

[type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */
}

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto;
}

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block;
}

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item;
}

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block;
}

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block;
}

/**
     * Add the correct display in IE.
     */
template {
  display: none;
}

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none;
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 62.5%;
}

@media only screen and (max-width: 75em) {
  html {
    font-size: 50%;
  }
}

body {
  font-family: "Nunito", sans-serif;
  color: #6d5d4b;
  font-weight: 300;
  line-height: 1.6;
}

.container {
  display: grid;
  grid-template-rows: 80vh -webkit-min-content 40vw repeat(3, -webkit-min-content);
  grid-template-rows: 80vh min-content 40vw repeat(3, min-content);
  grid-template-columns: [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(-webkit-min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];
  grid-template-columns: [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];
}

@media only screen and (max-width: 62.5em) {
  .container {
    grid-template-rows: 6rem 80vh -webkit-min-content 40vw repeat(3, -webkit-min-content);
    grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content);
    grid-template-columns: [full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(-webkit-min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];
    grid-template-columns: [full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];
  }
}

@media only screen and (max-width: 50em) {
  .container {
    grid-template-rows: 6rem calc(100vh - 6rem) -webkit-min-content -webkit-min-content 40vw repeat(3, -webkit-min-content);
    grid-template-rows: 6rem calc(100vh - 6rem) min-content min-content 40vw repeat(3, min-content);
  }
}

.container > * {
  padding: 40px;
  font-size: 3rem;
}

.heading-1, .heading-2, .heading-3, .heading-4 {
  font-family: "Josefin Sans", sans-serif;
  font-weight: 400;
}

.heading-1 {
  font-size: 4.5rem;
  color: #f9f7f6;
  line-height: 1;
}

.heading-2 {
  font-size: 4rem;
  font-style: italic;
  line-height: 1;
}

.heading-2--light {
  color: #f9f7f6;
}

.heading-2--dark {
  color: #54483a;
}

.heading-3 {
  font-size: 1.6rem;
  color: #c69963;
  text-transform: uppercase;
}

.heading-4 {
  font-size: 1.9rem;
}

.heading-4--light {
  color: #f9f7f6;
}

.heading-4--dark {
  color: #54483a;
}

.btn {
  background-color: #c69963;
  color: #fff;
  border: none;
  border-radius: 0;
  font-family: "Josefin Sans", sans-serif;
  font-size: 1.5rem;
  text-transform: uppercase;
  padding: 1.8rem 3rem;
  cursor: pointer;
  transition: all 0.2;
}

.btn:hover {
  background-color: #b28451;
}

p {
  font-size: 1.7rem;
}

.mb-sm {
  margin-bottom: 2rem;
}

.mb-md {
  margin-bottom: 3rem;
}

.mb-lg {
  margin-bottom: 4rem;
}

.mb-xl {
  margin-bottom: 8rem;
}

.header {
  background-color: #f9f7f6;
  grid-column: full-start / col-end 6;
  background-image: linear-gradient(rgba(16, 29, 44, 0.93), rgba(16, 29, 44, 0.93)), url(/img/hero.jpeg);
  background-size: cover;
  background-position: center;
  padding: 8rem;
  padding-top: 4rem;
  display: grid;
  grid-template-rows: 1fr -webkit-min-content 6rem 1fr;
  grid-template-rows: 1fr min-content 6rem 1fr;
  grid-template-columns: min-max(-webkit-min-content, -webkit-max-content);
  grid-template-columns: min-max(min-content, max-content);
  grid-row-gap: 1.5rem;
  justify-content: center;
}

@media only screen and (max-width: 50em) {
  .header {
    grid-column: 1 / -1;
  }
}

@media only screen and (max-width: 37.5em) {
  .header {
    grid-column: 1 / -1;
    padding: 5rem;
  }
}

.header__logo {
  height: 3rem;
  justify-self: center;
}

.header__seenon-text {
  display: grid;
  grid-template-columns: 1fr -webkit-min-content 1fr;
  grid-template-columns: 1fr min-content 1fr;
  grid-column-gap: 1.5rem;
  align-items: center;
  color: #aaa;
  font-size: 1.6rem;
}

.header__seenon-text:before, .header__seenon-text:after {
  content: "";
  height: 1px;
  display: block;
  background-color: currentColor;
}

.header__seenon--logos {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-column-gap: 3rem;
  justify-items: center;
  align-items: center;
}

.header__seenon--logos img {
  max-height: 2.5rem;
  max-width: 100%;
  -webkit-filter: brightness(70%);
          filter: brightness(70%);
}

.header__btn {
  align-self: center;
  justify-self: start;
}

.features {
  grid-column: center-start/ center-end;
  margin: 15rem 0;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  grid-gap: 6rem;
  align-items: start;
}

.feature {
  display: grid;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  grid-row-gap: 1.5rem;
  grid-column-gap: 2.5rem;
}

.feature__icon {
  fill: #c69963;
  width: 4.5rem;
  height: 4.5rem;
  grid-row: 1 / span 2;
}

.feature__text {
  font-size: 1.7rem;
}

.homes {
  grid-column: center-start/ center-end;
  margin: 15rem 0;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  grid-gap: 7rem;
}

.home {
  background-color: #f9f7f6;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-row-gap: 3.5rem;
}

.home__img {
  width: 100%;
  grid-column: 1/-1;
  grid-row: 1/2;
  z-index: 1;
}

.home__like {
  grid-row: 1/2;
  grid-column: 2/3;
  width: 2.5rem;
  height: 2.5rem;
  z-index: 2;
  justify-self: end;
  margin: 1rem;
}

.home__name {
  grid-column: 1/-1;
  grid-row: 1/2;
  font-family: "Josefin Sans", sans-serif;
  font-size: 1.6rem;
  text-align: center;
  padding: 1.25rem;
  width: 80%;
  justify-self: center;
  align-self: end;
  transform: translateY(50%);
  background-color: #101d2c;
  color: #fff;
  font-weight: 400;
  z-index: 3;
}

.home__location {
  margin-top: 2.5rem;
}

.home__rooms {
  margin-top: 2.5rem;
}

.home__price {
  font-size: 1.5rem;
  margin-left: 2rem;
}

.home__btn {
  grid-column: 1/-1;
}

.home__location, .home__area, .home__price, .home__rooms {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.home svg {
  fill: #c69963;
  width: 2rem;
  height: 2rem;
  margin-right: 1rem;
}

.gallery {
  background-color: #f9f7f6;
  grid-column: full-start / full-end;
  display: grid;
  /*grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(7, 5vw);*/
  grid-template: repeat(7, 5vw)/repeat(8, 1fr);
  grid-gap: 1.5rem;
}

.gallery__item--1 {
  grid-row: 1 / span 2;
  grid-column: 1 / span 2;
}

.gallery__item--2 {
  grid-row: 1 / span 3;
  grid-column: 3 / span 3;
}

.gallery__item--3 {
  grid-row: 1 / span 2;
  grid-column: 6 / 7;
}

.gallery__item--4 {
  grid-row: 1 / span 2;
  grid-column: 7 / -1;
}

.gallery__item--5 {
  grid-row: 3 / span 3;
  grid-column: 1 / span 2;
}

.gallery__item--6 {
  grid-row: 4 / span 2;
  grid-column: 3 / span 2;
}

.gallery__item--7 {
  grid-row: 4 / 5;
  grid-column: 5 / 6;
}

.gallery__item--8 {
  grid-row: 3 / span 2;
  grid-column: 6 / span 2;
}

.gallery__item--9 {
  grid-row: 3 / span 3;
  grid-column: 8 / -1;
}

.gallery__item--10 {
  grid-row: 6 / span 2;
  grid-column: 1 / 2;
}

.gallery__item--11 {
  grid-row: 6 / span 2;
  grid-column: 2 / span 2;
}

.gallery__item--12 {
  grid-row: 6 / span 2;
  grid-column: 4 / 5;
}

.gallery__item--13 {
  grid-row: 5 / span 3;
  grid-column: 5 / span 3;
}

.gallery__item--14 {
  grid-row: 6 / span 2;
  grid-column: 8 / -1;
}

.gallery__img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  display: block;
}

.realtors {
  background-color: #101d2c;
  grid-column: col-start 7 / full-end;
  padding: 3rem;
}

@media only screen and (max-width: 50em) {
  .realtors {
    grid-column: 1 / -1;
  }
}

.realtors__list {
  display: grid;
  grid-template-columns: -webkit-min-content -webkit-max-content;
  grid-template-columns: min-content max-content;
  grid-column-gap: 2rem;
  grid-row-gap: 5vh;
  align-items: center;
  margin-top: 3rem;
}

@media only screen and (max-width: 50em) {
  .realtors__list {
    grid-template-columns: repeat(3, -webkit-min-content -webkit-max-content);
    grid-template-columns: repeat(3, min-content max-content);
  }
}

@media only screen and (max-width: 37.5em) {
  .realtors__list {
    grid-template-columns: -webkit-min-content -webkit-max-content;
    grid-template-columns: min-content max-content;
    display: grid;
    align-items: center;
    justify-items: center;
    text-align: center;
  }
}

.realtors__img {
  width: 7rem;
  border-radius: 50%;
  display: block;
}

.realtors__sold {
  text-transform: uppercase;
  color: #aaa;
  margin-top: -3px;
  font-size: 1.1rem;
}

.sidebar {
  background-color: #c69963;
  grid-column: sidebar-start / sidebar-end;
  grid-row: 1 / -1;
  display: flex;
  justify-content: center;
}

@media only screen and (max-width: 62.5em) {
  .sidebar {
    grid-column: 1/ -1;
    grid-row: 1 / 2;
    justify-content: flex-end;
    align-items: center;
  }
}

.sidebar .nav-btn {
  border: none;
  border-radius: 0;
  background-color: #fff;
  height: 2px;
  width: 4.5rem;
  margin-top: 4rem;
}

.sidebar .nav-btn:before, .sidebar .nav-btn:after {
  content: "";
  display: block;
  background-color: #fff;
  height: 2px;
  width: 4.5rem;
}

.sidebar .nav-btn::before {
  transform: translateY(-1.5rem);
}

.sidebar .nav-btn::after {
  transform: translateY(1.3rem);
}

@media only screen and (max-width: 62.5em) {
  .sidebar .nav-btn {
    margin-top: -3.6rem;
    margin-right: -2rem;
  }
}

.story__pictures {
  background-color: #c69963;
  grid-column: full-start / col-end 4;
  background-image: linear-gradient(rgba(198, 153, 99, 0.5), rgba(198, 153, 99, 0.5)), url("../img/back.jpg");
  background-size: cover;
  display: grid;
  grid-template-rows: repeat(6, 1fr);
  grid-template-columns: repeat(6, 1fr);
  align-items: center;
}

@media only screen and (max-width: 50em) {
  .story__pictures {
    grid-column: 1 / -1;
    padding: 3rem;
  }
}

.story__img--1 {
  width: 100%;
  grid-row: 2 / 6;
  grid-column: 2 / 6;
  box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.1);
}

@media only screen and (max-width: 50em) {
  .story__img--1 {
    grid-column: 1 / 5;
    grid-row: 1 / -1;
    width: 100%;
    height: auto;
  }
}

.story__img--2 {
  width: 125%;
  grid-row: 4/6;
  grid-column: 4/7;
  z-index: 20;
  box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.3);
}

@media only screen and (max-width: 50em) {
  .story__img--2 {
    grid-column: 1 / 3;
    width: 100%;
  }
}

.story__content {
  background-color: #f9f7f6;
  grid-column: col-start 5 / full-end;
  padding: 6rem 8vw;
  display: grid;
  align-content: center;
  justify-items: start;
}

@media only screen and (max-width: 50em) {
  .story__content {
    grid-column: 1 / -1;
    grid-row: 5 / 6;
  }
}

.story__text {
  font-size: 1.5rem;
  font-style: italic;
  margin-bottom: 4rem;
}

.footer {
  background-color: #101d2c;
  grid-column: full-start / full-end;
  padding: 8rem;
}

.nav {
  list-style: none;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));
  grid-gap: 2rem;
  align-items: center;
}

.nav__link:link, .nav__link:visited {
  font-size: 1.2rem;
  color: #fff;
  text-decoration: none;
  font-family: "Josefin Sans", sans-serif;
  text-transform: uppercase;
  text-align: center;
  padding: 1.2rem;
  display: block;
  transition: all 0.2s;
  background-color: rgba(255, 255, 255, 0.05);
}

.nav__link:hover, .nav__link:active {
  background-color: rgba(255, 255, 255, 0.05);
  transform: translateY(-3px);
}

.copyright {
  margin-top: 4.5rem;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
